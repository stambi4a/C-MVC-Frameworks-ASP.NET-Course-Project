@using ESportsEventsApp.Extensions
@using ViewModels;
@model IEnumerable<EventViewModel>

@{
    ViewBag.Title = $"All {ViewBag.TierType} Events";
    ViewBag.SortName = ViewBag.SortValue.Equals("Name") && ViewBag.SortOrder.Equals("Asc") ? "Desc" : "Asc";
    ViewBag.SortLocation = ViewBag.SortValue.Equals("Location") && ViewBag.SortOrder.Equals("Asc") ? "Desc" : "Asc";
    ViewBag.SortVenue = ViewBag.SortValue.Equals("Venue") && ViewBag.SortOrder.Equals("Asc") ? "Desc" : "Asc";
    ViewBag.SortPrizePool = ViewBag.SortValue.Equals("PrizePool") && ViewBag.SortOrder.Equals("Asc") ? "Desc" : "Asc";
    ViewBag.SortSeason = ViewBag.SortValue.Equals("Season") && ViewBag.SortOrder.Equals("Asc") ? "Desc" : "Asc";
}

<div class="responsive">
    <h4 class="text-center">@ViewBag.Title</h4>
    <p>
        @Html.ActionLink("Create New Event", "Create", null, new { @class = "btn btn-primary", @style = "width:150px;" })
    </p>
    <table class="table-striped">
        <tr>
            <th>
                @Html.Name("Logo")
            </th>
            <th>
                <a href="@Url.Action("AllByTierType", "Events", new { area = "Admin", sortValue = "Name", sortOrder = ViewBag.SortName })" class="btn btn-info">
                    Name&nbsp;
                    @if (ViewBag.SortName.Equals("Desc"))
                    {
                        <span class="dropup">
                            <span class="caret"></span>
                        </span>
                    }
                    else
                    {
                        <span class="caret"></span>
                    }
                </a>
            </th>
            <th>
                <a href="@Url.Action("AllByTierType", "Events", new { area = "Admin", sortValue = "Location", sortOrder = ViewBag.SortLocation })" class="btn btn-info">
                    Index&nbsp;
                    @if (ViewBag.SortLocation.Equals("Desc"))
                    {
                        <span class="dropup">
                            <span class="caret"></span>
                        </span>
                    }
                    else
                    {
                        <span class="caret"></span>
                    }
                </a>
            </th>
            <th>
                <a href="@Url.Action("AllByTierType", "Events", new { area = "Admin", sortValue = "Venue", sortOrder = ViewBag.SortVenue })" class="btn btn-info">
                    Venue&nbsp;
                    @if (ViewBag.SortVenue.Equals("Desc"))
                    {
                        <span class="dropup">
                            <span class="caret"></span>
                        </span>
                    }
                    else
                    {
                        <span class="caret"></span>
                    }
                </a>
            </th>
            <th>
                <a href="@Url.Action("AllByTierType", "Events", new { area = "Admin", sortValue = "PrizePool", sortOrder = ViewBag.SortPrizePool })" class="btn btn-info">
                    PrizePool&nbsp;
                    @if (ViewBag.SortPrizePool.Equals("Desc"))
                    {
                        <span class="dropup">
                            <span class="caret"></span>
                        </span>
                    }
                    else
                    {
                        <span class="caret"></span>
                    }
                </a>
            </th>
            <th>
                <a href="@Url.Action("AllByTierType", "Events", new { area = "Admin", sortValue = "Season", sortOrder = ViewBag.SortSeason })" class="btn btn-info">
                    Season&nbsp;
                    @if (ViewBag.SortSeason.Equals("Desc"))
                    {
                        <span class="dropup">
                            <span class="caret"></span>
                        </span>
                    }
                    else
                    {
                        <span class="caret"></span>
                    }
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventAdmins)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            @Html.HiddenFor(model => item.Id)
            <tr>
                <td>
                    @if (item.Logo != null)
                    {
                        @Html.Image(item.Logo.Url, string.Empty, "width:50px; height:auto;")
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.ActionLink(item.City.Name + ", ", "Details", "Cities", new { area = "LocationAdmin", id = item.City.Id }, new { @class = "table-link" })
                    @Html.ActionLink(item.Country.Name, "Details", "Countries", new { area = "LocationAdmin", id = item.Country.Id }, new { @class = "table-link" })
                </td>
                <td>
                    @Html.ActionLink(item.Venue.Name, "Details", "Venues", new { area = "LocationAdmin", id = item.Venue.Id }, new { @class = "table-link" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrizePoolToString)
                </td>
                <td>
                    @Html.ActionLink(item.Season.Year.ToString(), "AllBySeason", "Events", new { area = "Admin", seasonId = item.Season.Id }, new { @class = "table-link" })
                </td>
                <td>
                    @{
                        var links = item.EventAdmins.ToArray();
                        for (var i = 0; i < links.Length - 1; i++)
                        {
                            @Html.ActionLink(links[i].UserName + ", ", "Details", "Users", new { area = "Admin", id = links[i].Id }, new { @class = "table-link" })
                        }
                        if (links.Length > 0)
                        {
                            @Html.ActionLink(links[links.Length - 1].UserName, "Details", "Users", new { area = "Admin", id = links[links.Length - 1].Id }, new { @class = "table-link" })
                        }
                    }

                </td>
                <td class="col-lg-2 col-md-3 col-sm-3">
                    <div class="dropdown">
                        <button class="dropbtn btn-info dropdown-toggle" data-toggle="dropdown">
                            Actions
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-content dropdown-menu">
                            <li>@Html.ActionLink("BackToList", "Index", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                            <li>@Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                            <li>@Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                            @if (item.StartDate > DateTime.Now)
                            {
                                <li>@Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                                <li>@Html.ActionLink("Edit Logo", "EditLogo", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                                <li>@Html.ActionLink("Edit Logo Local", "EditLogoLocal", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                                <li>@Html.ActionLink("Associate Admin", "AssociateAdmin", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                                <li>@Html.ActionLink("Dissociate Admin", "DissociateAdmin", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                            }
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </table>
</div>
<div class="divider-big">
</div>
