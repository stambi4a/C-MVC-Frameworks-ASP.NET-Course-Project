@using ViewModels
@model IEnumerable<ViewModels.RegisteredUserViewModel>

@{
    ViewBag.Title = $"All {ViewBag.RoleType} users";
    ViewBag.SortName = ViewBag.SortValue.Equals("Username") && ViewBag.SortOrder.Equals("Asc") ? "Desc" : "Asc";
    ViewBag.SortLocation = ViewBag.SortValue.Equals("DateAdded") && ViewBag.SortOrder.Equals("Asc") ? "Desc" : "Asc";
    ViewBag.SortEmail = ViewBag.SortValue.Equals("Email") && ViewBag.SortOrder.Equals("Asc") ? "Desc" : "Asc";
}

<div class="responsive">
    <h4 class="text-center">@ViewBag.Title</h4>
    <p>
        @Html.ActionLink("Create New User", "Create", null, new { @class = "btn btn-primary", @style = "width:150px;" })
    </p>
<table class="table-striped">
    <tr>
        <th>
            <a href="@Url.Action("AllByRole", "Users", new { area = "Admin", sortValue = "Username", sortOrder = ViewBag.SortName })" class="btn btn-info">
                Username&nbsp;
                @if (ViewBag.SortName.Equals("Desc"))
                {
                    <span class="dropup">
                        <span class="caret"></span>
                    </span>
                }
                else
                {
                    <span class="caret"></span>
                }
            </a>

        </th>
        <th>
            <a href="@Url.Action("AllByRole", "Users", new { area = "Admin", sortValue = "Email", sortOrder = ViewBag.SortEmail })" class="btn btn-info">
                Email&nbsp;
                @if (ViewBag.SortEmail.Equals("Desc"))
                {
                    <span class="dropup">
                        <span class="caret"></span>
                    </span>
                }
                else
                {
                    <span class="caret"></span>
                }
            </a>

        </th>
        <th>
            @Html.DisplayNameFor(model => model.Roles)
        </th>
        <th>
            <a href="@Url.Action("AllByRole", "Users", new { area = "Admin", sortValue = "DateAdded", sortOrder = ViewBag.SortName })" class="btn btn-info">
                DateAdded&nbsp;
                @if (ViewBag.SortName.Equals("Desc"))
                {
                    <span class="dropup">
                        <span class="caret"></span>
                    </span>
                }
                else
                {
                    <span class="caret"></span>
                }
            </a>

        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        @Html.HiddenFor(model => item.Id)
        <tr>
            <td>
                @Html.ActionLink(item.Username, "Details", "Users", new { area = "Admin", id = item.Id }, new { @class = "table-link" })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @{
                    var links = item.Roles.ToArray();
                    for (var i = 0; i < links.Length - 1; i++)
                    {
                        @Html.ActionLink(links[i], "AllByRole", "Users", new { area = "Admin", roleName = links[i] }, new { @class = "table-link" })
                        @Html.Name(", ")
                    }
                    if (links.Length > 0)
                    {
                        @Html.ActionLink(links[links.Length - 1], "AllByRole", "Users", new { area = "Admin", roleName = links[links.Length - 1] }, new { @class = "table-link" })
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateAdded)
            </td>
            <td class="col-lg-2 col-md-3 col-sm-3">
                <div class="dropdown">
                    <button class="dropbtn btn-info dropdown-toggle" data-toggle="dropdown">
                        Actions
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-content dropdown-menu">
                        <li>@Html.ActionLink("All users", "Index", null, new { @class = "btn btn-info" })</li>
                        <li>@Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                        <li>@Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                        <li>@Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                        <li>@Html.ActionLink("Associate Role", "AssociateRole", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                        <li>@Html.ActionLink("Dissociate Role", "DissociateRole", new { id = item.Id }, new { @class = "btn btn-info" })</li>
                    </ul>
                </div>
            </td>
        </tr>
                    }
</table>
</div>
<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
