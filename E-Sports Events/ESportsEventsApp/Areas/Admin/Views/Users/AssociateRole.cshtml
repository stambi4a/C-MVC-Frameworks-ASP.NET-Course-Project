@using ESportsEventsApp.Extensions
@model BindingModels.AssociateRoleBindingModel

@{
    ViewBag.Title = "Associate Role for ";
    var associatedRoles = Model.AssociatedRoles.ToArray();
    var roles = new List<string>
                    {
                        "Admin",
                        "ArticleAuthor",
                        "EventAdmin",
                        "PlayerAdmin",
                        "LocationAdmin",
                        "Volunteer",
                        "Guest",
                        "Buyer",
                        "Seller"
                    };
    var availableRoles = roles.Except(associatedRoles.ToList()).Select(r => new SelectListItem() { Text = r, Value = r });
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-4 col-md-6 col-sm-8">
            <div class="form-horizontal">
                <h4>@ViewBag.Title@Model.Username</h4>
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="responsive">
                    <table class="table-striped">
                        <tr>
                            <td class="left-cell col-lg-2 col-md-3 col-sm-4">@Html.DisplayNameFor(model => model.AssociatedRoles)</td>
                            <td class="right-cell col-lg-2 col-md-3 col-sm-4">
                               @for (var i = 0; i < associatedRoles.Length - 1; i++)
                               {
                                @Html.ActionLink(associatedRoles[i], "AllByRole", "Users", new { Area = "Admin", roleName = associatedRoles[i] }, new { @class = "table-link" })
                                @Html.Name(", ")
                               }
                                @if (associatedRoles.Length > 0)
                                {
                                    @Html.ActionLink(associatedRoles[associatedRoles.Length - 1], "AllByRole", "Users", new { Area = "Admin", roleName = associatedRoles[associatedRoles.Length - 1] }, new { @class = "table-link" })
                                }
                               
                            </td>
                        </tr>
                        <tr>
                            <td class="left-cell col-lg-2 col-md-3 col-sm-4">@Html.DisplayNameFor(model => model.AvailableRoles)</td>
                            <td class="right-cell col-lg-2 col-md-3 col-sm-4">
                                @Html.DropDownListFor(model=>model.AddedRole, availableRoles, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AddedRole, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                    </table>
                </div>	
                <br/>
                <div class="form-group">
                    <div class="col-lg-10 col-md-10 col-sm-10">
                        @Html.SubmitButton("Save")
                    </div>
                </div>
                <br/><br/>
            </div>
        </div>
        <div class="col-lg-2 col-md-3 col-sm-3" style="padding-top: 40px;">
            <ul>
                <li>@Html.ActionLink("All users", "Index", null, new { @class = "btn btn-primary" })</li>
                <li>@Html.ActionLink("Details", "Details", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
                <li>@Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })</li>
                <li>@Html.ActionLink("Associate Role", "AssociateRole", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
                <li>@Html.ActionLink("Dissociate Role", "DissociateRole", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
            </ul>
        </div>
        <br />
        <br />
    </div>
 }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
