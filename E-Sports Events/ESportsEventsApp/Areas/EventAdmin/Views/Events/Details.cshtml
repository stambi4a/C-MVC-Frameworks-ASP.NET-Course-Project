@using ESportsEventsApp.Extensions
@using Helpers
@using ViewModels
@model EventAllDetailsViewModel

@{
    ViewBag.Title = $"Details for {Model.Name}";
}

<div>
    <h4>@ViewBag.Title</h4>
    <div class="responsive">
        <table class="table">
            <tr>
                <td class="col-lg-4 col-md-4 col-sm-8">
                    <div class="responsive">
                        <table class="table-striped">
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.Name)</td>
                                <td>@Html.DisplayFor(model => model.Name)</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.Logo)</td>
                                <td>@Html.Image(Model.Logo.Url, string.Empty, "width:50px;height:auto;")</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.Location)</td>
                                <td>
                                    @Html.ActionLink(@Model.City.Name + ", ", "Details", "Cities", new { area = "LocationAdmin", id = Model.City.Id }, new { @class = "table-link" })
                                    @Html.ActionLink(@Model.Country.Name, "Details", "Countries", new { area = "LocationAdmin", id = Model.Country.Id }, new { @class = "table-link" })
                                </td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.Venue)</td>
                                <td>@Html.ActionLink(@Model.Venue.Name, "Details", "Venues", new { area = "LocationAdmin", id = Model.Venue.Id }, new { @class = "table-link" })</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.PrizePool)</td>
                                <td>@Html.DisplayFor(model => model.PrizePoolToString)</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.Description)</td>
                                <td>@Html.DisplayFor(model => model.Description)</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.TierType)</td>
                                <td>
                                    @Html.ActionLink(@Model.TierType.ToString(), "AllByTierType", "Events", new { area = "Admin", tierType = Model.TierType }, new { @class = "table-link" })
                                </td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.StartDate)</td>
                                <td>@Html.DisplayFor(model => model.StartDate)</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.EndDate)</td>
                                <td>@Html.DisplayFor(model => model.EndDate)</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.Players)</td>
                                <td>
                                    @{
                                        var linksEa = Model.Players.ToArray();
                                        for (var i = 0; i < linksEa.Length - 1; i++)
                                        {
                                            @Html.ActionLink(linksEa[i].Name + ", ", "Details", "Players", new { area = "PlayerAdmin", id = linksEa[i].Id }, new { @class = "table-link" })
                                        }
                                        if (linksEa.Length > 0)
                                        {
                                            @Html.ActionLink(linksEa[linksEa.Length - 1].Name, "Details", "Players", new { area = "PlayerAdmin", id = linksEa[linksEa.Length - 1].Id }, new { @class = "table-link" })
                                        }
                                    }
                                </td>
                            </tr>
                        </table>
                    </div>
                </td>
                <td class="col-lg-2 col-md-2 col-sm-4">
                    <ul>
                        <li>@Html.ActionLink("All events", "Index", null, new { @class = "btn btn-primary" })</li>
                        <li>@Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
                        @if (Model.StartDate > DateTime.Now)
                        {
                            <li>@Html.ActionLink("Edit Logo", "EditLogo", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
                            <li>@Html.ActionLink("Edit Logo Local", "EditLogoLocal", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
                        }
                        <li>@Html.ActionLink("Add event image", "AddEventImage", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
                        <li>@Html.ActionLink("Add event image from local", "AddEventImageLocal", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
                        <li>@Html.ActionLink("Remove event image", "RemoveEventImage", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
                        <li>@Html.ActionLink("Add event video", "AddEventVideo", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
                        <li>@Html.ActionLink("Remove event video", "RemoveEventVideo", new { id = Model.Id }, new { @class = "btn btn-primary" })</li>
                    </ul>
                </td>
                <td></td>
            </tr>
        </table>
    </div>
    <div class="row">
        <div class="col-lg-offset-1 col-md-offset-1 col-sm-offset-1 col-lg-10 col-md-10 col-sm-10">
            <div class="featured_slider">
                <h2 class="details_featured_title">Event Images</h2>
                <div class="slick_slider">
                    @foreach (var image in Model.EventImages)
                    {
                        <div class="single_iteam">
                            @Html.Image(image.Url, string.Empty, "")
                            <h2><a class="slider_tittle" href="#">@image.Caption</a></h2>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-offset-1 col-md-offset-1 col-sm-offset-1 col-lg-10 col-md-10 col-sm-10">
            <div class="featured_slider">
                <h2 class="details_featured_title">Event Videos</h2>
                <div class="slick_slider">
                    @foreach (var video in Model.EventVideos)
                    {
                        <div class="single_iteam embed-responsive embed-responsive-16by9">
                            @Html.VideoHd(video.Url);
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>