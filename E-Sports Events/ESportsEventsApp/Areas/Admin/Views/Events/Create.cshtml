@using BindingModels
@model EventBindingModel

@{
    ViewBag.Title = "Create new Esports Event";
}


@using (Html.BeginForm(Html.BeginForm("Create", "Events", new { Area = "Admin" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" })))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-4 col-md-4 col-sm-8">
            <div class="form-horizontal">
                <h3>@ViewBag.Title</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrizePool, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.PrizePool, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrizePool, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TierType, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EnumDropDownListFor(model => model.TierType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TierType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 " })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.Logo.Url, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Logo.Url, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                    @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.Logo, new { htmlAttributes = new { @class = "form-control", @type="file" } })
                        @Html.ValidationMessageFor(model => model.Logo.Url, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
            <p>
                @Html.ActionLink("Back to List", "Index")
            </p>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
