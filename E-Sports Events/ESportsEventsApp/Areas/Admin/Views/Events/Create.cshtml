@using BindingModels
@model EventBindingModel

@{
    ViewBag.Title = "Create new Esports Event";
    var availableCountries = Model.AvailableCountries.Select(ac => new SelectListItem { Text = ac.Name, Value = ac.Id.ToString() });
    var availableCities = Model.AvailableCities.Select(aa => new SelectListItem() { Text = aa.Name, Value = aa.Id.ToString() });
    var availableVenues = Model.AvailableVenues.Select(aa => new SelectListItem() { Text = aa.Name, Value = aa.Id.ToString() });
}


@using (Html.BeginForm("Create", "Events", new { Area = "Admin" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-4 col-md-5 col-sm-6">
            <div class="form-horizontal">
                <h4>@ViewBag.Title</h4>
                <br/>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrizePool, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.PrizePool, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrizePool, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TierType, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EnumDropDownListFor(model => model.TierType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TierType, "", new { @class = "text-danger" })
                    </div>
                </div>
               

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.DropDownListFor(model => model.CountryId, availableCountries, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AvailableCountries, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.DropDownListFor(model => model.CityId, availableCities, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AvailableCities, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Venue, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.DropDownListFor(model => model.VenueId, availableVenues, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AvailableVenues, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6" })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "mm/dd/yyyy HH:MM" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-6 " })
                    <div class="col-lg-8 col-md-8 col-sm-6">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @placeholder= "mm/dd/yyyy HH:MM" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-lg-3 col-md-3 col-sm-3">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-lg-4 col-md-4 col-sm-4 col-xs-6">
                        @Html.ActionLink("Back To List", "Index", null, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
            <br />
            <br />
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
